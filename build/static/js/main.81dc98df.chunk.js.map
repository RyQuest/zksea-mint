{"version":3,"sources":["helpers/Web3Helper.js","helpers/Connect.js","reducers/authReducer.js","helpers/Transaction.js","App.js","store/store.js","index.js"],"names":["providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","network","chainId","web3Modal","Web3Modal","cacheProvider","disableInjectedProvider","web3","a","connect","provider","Web3","Connect","web3Connect","console","log","eth","getChainId","getAccounts","accounts","authSlice","createSlice","name","initialState","value","user","isAuthenticated","reducers","login","state","action","payload","logout","actions","Transaction","data","hash","sendTransaction","App","useState","counter","setcounter","loading","setloading","ethPrice","setethPrice","dispatch","useDispatch","useSelector","auth","loginUser","handleLogin","address","toast","error","position","handleBuy","price","parseFloat","tx","from","to","gas","toString","txr","axios","post","transactionHash","res","className","src","alt","onClick","combineReducers","authReducer","persistConfig","key","storage","persistReducers","persistReducer","store","configureStore","reducer","middleware","thunk","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81dc98df.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport Web3Modal from \"web3modal\";\r\n\r\nconst providerOptions = {\r\n    // / See Provider Options Section /\r\n\r\n    walletconnect: {\r\n        package: WalletConnectProvider,\r\n        options: {\r\n            rpc: {\r\n                56: \"https://bsc-dataseed.binance.org/\",\r\n            },\r\n            network: \"mainnet\",\r\n            chainId: 56,\r\n            // infuraId: \"bnb1a5cae5d9hp0we9cx9v02n9hvmt94nnuguv0fav\",\r\n        },\r\n    },\r\n};\r\n\r\nconst web3Modal = new Web3Modal({\r\n    network: \"mainnet\", // optional\r\n    cacheProvider: true, // optional\r\n    providerOptions, // required\r\n    disableInjectedProvider: false,\r\n});\r\n\r\n\r\n\r\nexport const web3 = async () => {\r\n    const provider = await web3Modal.connect();\r\n    const web3 = new Web3(provider);\r\n\r\n    return web3;\r\n};\r\n\r\n\r\nexport const Provider=async()=>{\r\n    const provider = await web3Modal.connect();\r\n\r\n    return provider;\r\n}\r\n","import {web3} from \"./Web3Helper\";\r\nconst Connect=async()=>{\r\n    const web3Connect=await web3()\r\n    console.log('web3',web3Connect)\r\n    \r\n    const chainId = await web3Connect.eth.getChainId();\r\n    console.log(\"chainId\", chainId)\r\n\r\n    if (chainId ==4) {\r\n        const accounts = await web3Connect.eth.getAccounts();\r\n        // console.log('accounts',accounts)\r\n        return accounts;\r\n    }else{\r\n        return null\r\n    }\r\n    \r\n}\r\nexport default Connect; ","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n    name: \"Auth\",\r\n    initialState: { value: { user: {}, isAuthenticated: false } },\r\n    reducers: {\r\n        login: (state, action) => {\r\n            state.value = action.payload;\r\n        },\r\n        logout: (state) => {\r\n            state.value = { user: {}, isAuthenticated: false };\r\n        },\r\n    },\r\n});\r\n\r\nexport const { login, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n","import { web3 } from \"./Web3Helper\"\r\nexport const Transaction=async(data)=>{\r\n        \r\n    let web3Connect=await web3();\r\n    console.log('data',data);\r\n     let hash=false;\r\n    try{\r\n\r\n         hash=await web3Connect.eth.sendTransaction(data);\r\n\r\n       }catch(e){\r\n        console.log(e);\r\n    }\r\n    return hash;\r\n    \r\n}","import { useState, useEffect } from \"react\";\r\nimport Connect from \"./helpers/Connect\";\r\nimport { login } from \"./reducers/authReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Transaction } from \"./helpers/Transaction\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"http://52.14.90.31:3001/random-NFT\";\r\nfunction App() {\r\n  const [counter, setcounter] = useState(0);\r\n\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const [ethPrice, setethPrice] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.auth.value.isAuthenticated\r\n  );\r\n\r\n  const loginUser = useSelector((state) => state.auth.value.user);\r\n\r\n  function inc() {\r\n    if (counter < 5) {\r\n      setcounter(counter + 1);\r\n    } else {\r\n      setcounter(5);\r\n    }\r\n\r\n    if (ethPrice === 0) {\r\n      setethPrice(\".069\");\r\n    }\r\n\r\n    if (ethPrice === \".069\") {\r\n      setethPrice(\".138\");\r\n    }\r\n\r\n    if (counter === 2) {\r\n      setethPrice(\".207\");\r\n    }\r\n\r\n    if (counter === 3) {\r\n      setethPrice(\".276\");\r\n    }\r\n\r\n    if (counter === 4) {\r\n      setethPrice(\".345\");\r\n    }\r\n  }\r\n\r\n  function decr() {\r\n    if (counter > 0) {\r\n      setcounter(counter - 1);\r\n    } else {\r\n      setcounter(0);\r\n    }\r\n\r\n    if (ethPrice === \".345\") {\r\n      setethPrice(\".276\");\r\n    }\r\n\r\n    if (ethPrice === \".276\") {\r\n      setethPrice(\".207\");\r\n    }\r\n\r\n    if (ethPrice === \".207\") {\r\n      setethPrice(\".138\");\r\n    }\r\n\r\n    if (ethPrice === \".138\") {\r\n      setethPrice(\".069\");\r\n    }\r\n\r\n    if (ethPrice === \".069\") {\r\n      setethPrice(0);\r\n    }\r\n  }\r\n\r\n  function max() {\r\n    setcounter(5);\r\n    setethPrice(\".345\");\r\n  }\r\n\r\n  const handleLogin = async () => {\r\n    let address = await Connect();\r\n    console.log(\"address\", address);\r\n\r\n    if (address == null) {\r\n      toast.error(\"Please switch to ropsten network\", {\r\n        position: \"top-center\",\r\n      });\r\n    } else {\r\n      dispatch(\r\n        login({\r\n          user: {\r\n            // balance: log.Balance,\r\n            address: address[0],\r\n          },\r\n          isAuthenticated: true,\r\n        })\r\n      );\r\n\r\n      console.log(\"login\", loginUser);\r\n    }\r\n  };\r\n\r\n  const handleBuy = async () => {\r\n    if (isAuthenticated) {\r\n      setloading(true);\r\n      let price = parseFloat(ethPrice);\r\n      let tx = {\r\n        from: loginUser.address,\r\n        to: \"0x15C989EC8d1b4AF23894900a624889B33d0Dc645\",\r\n        gas: 500000,\r\n        value: \"0x\" + (price * 1000000000000000000).toString(16),\r\n      };\r\n      let txr = await Transaction(tx);\r\n      console.log(\"txr\", txr);\r\n\r\n      if (txr == false) {\r\n        toast.error(\"Something went wrong!\", {\r\n          position: \"top-center\",\r\n        });\r\n      } else {\r\n        let res = await axios.post(url, {\r\n          address: loginUser.address,\r\n          price: price,\r\n          hash: txr.transactionHash,\r\n        });\r\n        console.log(\"res\", res);\r\n\r\n        setloading(false);\r\n\r\n        toast(\"Transation successful\", {\r\n          position: \"top-center\",\r\n        });\r\n      }\r\n    } else {\r\n      await handleLogin();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <div className=\"header\">\r\n        {loading && (\r\n          <div className=\"text-center\">\r\n            <div className=\"spinner-border text-white\"></div>\r\n          </div>\r\n        )}\r\n        {/* <div className=\"logo\"><img src=\"/images/LOGO-main.png\" alt=\"\" /></div> */}\r\n        <div className=\"logo\">\r\n          <img src=\"/images/logo-bull.png\" alt=\"\" />\r\n        </div>\r\n\r\n        <button onClick={() => handleLogin()} className=\"connectWallet\">\r\n          CONNECT WALLET\r\n        </button>\r\n      </div>\r\n      <div className=\"main\">\r\n        {/* <h1>MINT YOUR zkAPES</h1> */}\r\n        <h1>MINT YOUR Bullish Freaks</h1>\r\n\r\n\r\n        <div className=\"card\">\r\n          <div className=\"cardFlex1\">\r\n            <h2 className=\"aaa\">10,000 NFTs</h2>\r\n          </div>\r\n\r\n          <div className=\"cardFlex1\">\r\n            <div className=\"innerCont\">\r\n              <h2>MY ETH BALANCE</h2>\r\n              <h3>0 ETH</h3>\r\n            </div>\r\n\r\n            <div className=\"middle\">\r\n              <h2>AMOUNT</h2>\r\n              <div className=\"ggg\">\r\n                <button onClick={decr}>-</button>\r\n                <span>{counter}</span>\r\n                <button onClick={inc}>+</button>\r\n              </div>\r\n              <button className=\"max\" onClick={max}>\r\n                Max\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"innerCont\">\r\n              <h2>TOTAL PRICE</h2>\r\n              <h3>{ethPrice} ETH</h3>\r\n            </div>\r\n\r\n            <div className=\"cardFlex1 mainBTN\">\r\n              <button onClick={handleBuy}>Mint Now</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"darkBackground\"></div>\r\n        {/* <img src=\"/images/mainBG.jpeg\" className=\"background\" alt=\"\" /> */}\r\n        <img src=\"/images/bg-bull.png\" className=\"background\" alt=\"\" />\r\n      </div>\r\n\r\n      <div className=\"footer\">\r\n        <p>Copyright © 2022 zkAPES, All Right Reserved</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport persistReducer from \"redux-persist/es/persistReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n});\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n};\r\n\r\nconst persistReducers = persistReducer(persistConfig, reducers);\r\n\r\nconst store = configureStore({\r\n    reducer: persistReducers,\r\n    middleware: [thunk],\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\nimport store from \"./store/store\";\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n    </Provider>,\n  document.getElementById('root')\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}